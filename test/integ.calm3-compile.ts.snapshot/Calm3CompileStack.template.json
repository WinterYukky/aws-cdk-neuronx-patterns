{
 "Resources": {
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC"
     }
    ]
   }
  },
  "VPCPublicSubnet1SubnetB4246D30": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet1RouteTableFEE4B781": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   }
  },
  "VPCPublicSubnet1DefaultRoute91CEF279": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCPublicSubnet1EIP6AD938E8": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PublicSubnet1"
     }
    ]
   }
  },
  "VPCPublicSubnet1NATGatewayE0556630": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet1EIP6AD938E8",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC"
   ]
  },
  "VPCPublicSubnet2Subnet74179F39": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet2RouteTable6F1A15F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet2RouteTableAssociation5A808732": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    }
   }
  },
  "VPCPublicSubnet2DefaultRouteB7481BBA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCPublicSubnet2EIP4947BC00": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PublicSubnet2"
     }
    ]
   }
  },
  "VPCPublicSubnet2NATGateway3C070193": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet2EIP4947BC00",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTableAssociation5A808732"
   ]
  },
  "VPCPrivateSubnet1Subnet8BCA10E0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet1RouteTableBE8A6027": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet1RouteTableAssociation347902D1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
    }
   }
  },
  "VPCPrivateSubnet1DefaultRouteAE1D6490": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    }
   }
  },
  "VPCPrivateSubnet2SubnetCFCDAA7A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet2RouteTable0A19E10E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
    }
   }
  },
  "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet2NATGateway3C070193"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    }
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Calm3CompileStack/VPC"
     }
    ]
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCRestrictDefaultSecurityGroupCustomResource59474679": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "VPCB9E5F0B4",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "VPCB9E5F0B4",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ]
  },
  "Bucket83908E77": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "BucketPolicyE9A3008A": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "Bucket83908E77"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "Bucket83908E77",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "Bucket83908E77",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "BucketAutoDeleteObjectsCustomResourceBAFD23C2": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "Bucket83908E77"
    }
   },
   "DependsOn": [
    "BucketPolicyE9A3008A"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "Bucket83908E77"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ]
  },
  "NeuronxCompileLaunchTemplate4C04A440": {
   "Type": "AWS::EC2::LaunchTemplate",
   "Properties": {
    "LaunchTemplateData": {
     "BlockDeviceMappings": [
      {
       "DeviceName": "/dev/xvda",
       "Ebs": {
        "VolumeSize": 110
       }
      }
     ],
     "TagSpecifications": [
      {
       "ResourceType": "instance",
       "Tags": [
        {
         "Key": "Name",
         "Value": "Calm3CompileStack/NeuronxCompile/LaunchTemplate"
        }
       ]
      },
      {
       "ResourceType": "volume",
       "Tags": [
        {
         "Key": "Name",
         "Value": "Calm3CompileStack/NeuronxCompile/LaunchTemplate"
        }
       ]
      }
     ]
    },
    "TagSpecifications": [
     {
      "ResourceType": "launch-template",
      "Tags": [
       {
        "Key": "Name",
        "Value": "Calm3CompileStack/NeuronxCompile/LaunchTemplate"
       }
      ]
     }
    ]
   }
  },
  "NeuronxCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRoleB356015F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "NeuronxCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRoleDefaultPolicy17E75FBE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SingletonLambda08c9850a6f134ed49e2d7888d7b5a25822148CF9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambda08c9850a6f134ed49e2d7888d7b5a25822148CF9",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRoleDefaultPolicy17E75FBE",
    "Roles": [
     {
      "Ref": "NeuronxCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRoleB356015F"
     }
    ]
   }
  },
  "NeuronxCompileMachinImageNeuronxAmiProviderframeworkonEvent92C9E12F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3542be390685e0c8353d92ccb5796d343cd93ca946b6b0de798004206a199adc.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (Calm3CompileStack/NeuronxCompile/MachinImage/NeuronxAmiProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambda08c9850a6f134ed49e2d7888d7b5a25822148CF9",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "NeuronxCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRoleB356015F",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "NeuronxCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRoleDefaultPolicy17E75FBE",
    "NeuronxCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRoleB356015F"
   ]
  },
  "NeuronxCompileMachinImageNeuronxAmi5584B979": {
   "Type": "Custom::NeuronxAmi",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "NeuronxCompileMachinImageNeuronxAmiProviderframeworkonEvent92C9E12F",
      "Arn"
     ]
    },
    "image": {
     "Ref": "NeuronxCompileMachinImageImageParameter4D5CDC05"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "NeuronxCompileComputeEnvironmentSecurityGroup49BBBE62": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Calm3CompileStack/NeuronxCompile/ComputeEnvironment/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "neuronx-compile-worker"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "NeuronxCompileComputeEnvironmentInstanceProfileRole0364B0BD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "neuronx-compile-worker"
     }
    ]
   }
  },
  "NeuronxCompileComputeEnvironmentInstanceProfileRoleDefaultPolicyE3B08907": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Bucket83908E77",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "Bucket83908E77",
             "Arn"
            ]
           },
           "/cyberagent/calm3-22b-chat/neuronx-2.19.1/tp4-np4096-opt1/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxCompileComputeEnvironmentInstanceProfileRoleDefaultPolicyE3B08907",
    "Roles": [
     {
      "Ref": "NeuronxCompileComputeEnvironmentInstanceProfileRole0364B0BD"
     }
    ]
   }
  },
  "NeuronxCompileComputeEnvironmentInstanceProfileA2A02790": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "NeuronxCompileComputeEnvironmentInstanceProfileRole0364B0BD"
     }
    ]
   }
  },
  "NeuronxCompileComputeEnvironment672E2299": {
   "Type": "AWS::Batch::ComputeEnvironment",
   "Properties": {
    "ComputeResources": {
     "AllocationStrategy": "BEST_FIT_PROGRESSIVE",
     "Ec2Configuration": [
      {
       "ImageIdOverride": {
        "Fn::GetAtt": [
         "NeuronxCompileMachinImageNeuronxAmi5584B979",
         "image_id"
        ]
       },
       "ImageType": "ECS_AL2023"
      }
     ],
     "InstanceRole": {
      "Fn::GetAtt": [
       "NeuronxCompileComputeEnvironmentInstanceProfileA2A02790",
       "Arn"
      ]
     },
     "InstanceTypes": [
      "inf2.24xlarge"
     ],
     "LaunchTemplate": {
      "LaunchTemplateId": {
       "Ref": "NeuronxCompileLaunchTemplate4C04A440"
      },
      "Version": {
       "Fn::GetAtt": [
        "NeuronxCompileLaunchTemplate4C04A440",
        "LatestVersionNumber"
       ]
      }
     },
     "MaxvCpus": 256,
     "MinvCpus": 0,
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "NeuronxCompileComputeEnvironmentSecurityGroup49BBBE62",
        "GroupId"
       ]
      }
     ],
     "Subnets": [
      {
       "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
      },
      {
       "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
      }
     ],
     "Tags": {
      "Name": "neuronx-compile-worker"
     },
     "Type": "EC2"
    },
    "ReplaceComputeEnvironment": false,
    "State": "ENABLED",
    "Tags": {
     "Name": "neuronx-compile-worker"
    },
    "Type": "managed",
    "UpdatePolicy": {}
   }
  },
  "NeuronxCompileJobQueueB7D6AE97": {
   "Type": "AWS::Batch::JobQueue",
   "Properties": {
    "ComputeEnvironmentOrder": [
     {
      "ComputeEnvironment": {
       "Fn::GetAtt": [
        "NeuronxCompileComputeEnvironment672E2299",
        "ComputeEnvironmentArn"
       ]
      },
      "Order": 1
     }
    ],
    "JobStateTimeLimitActions": [
     {
      "Action": "CANCEL",
      "MaxTimeSeconds": 600,
      "Reason": "MISCONFIGURATION:JOB_RESOURCE_REQUIREMENT",
      "State": "RUNNABLE"
     }
    ],
    "Priority": 1,
    "State": "ENABLED"
   }
  },
  "NeuronxCompileContainerDefinitionExecutionRoleBEA6A2DC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "NeuronxCompileContainerDefinitionExecutionRoleDefaultPolicyEFD948B0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/batch/job:*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxCompileContainerDefinitionExecutionRoleDefaultPolicyEFD948B0",
    "Roles": [
     {
      "Ref": "NeuronxCompileContainerDefinitionExecutionRoleBEA6A2DC"
     }
    ]
   }
  },
  "NeuronxCompileJobDefinition5C3FF87A": {
   "Type": "AWS::Batch::JobDefinition",
   "Properties": {
    "ContainerProperties": {
     "Environment": [
      {
       "Name": "MODEL_ID",
       "Value": "cyberagent/calm3-22b-chat"
      },
      {
       "Name": "TP_DEGREE",
       "Value": "4"
      },
      {
       "Name": "N_POSITIONS",
       "Value": "4096"
      },
      {
       "Name": "OPT_LEVEL",
       "Value": "1"
      },
      {
       "Name": "QUANT_DTYPE",
       "Value": ""
      },
      {
       "Name": "ARTIFACT_S3_URL",
       "Value": {
        "Fn::Join": [
         "",
         [
          "s3://",
          {
           "Ref": "Bucket83908E77"
          },
          "/cyberagent/calm3-22b-chat/neuronx-2.19.1/tp4-np4096-opt1"
         ]
        ]
       }
      }
     ],
     "ExecutionRoleArn": {
      "Fn::GetAtt": [
       "NeuronxCompileContainerDefinitionExecutionRoleBEA6A2DC",
       "Arn"
      ]
     },
     "Image": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2ba1a7843b8bcffbb0c4b4cd6f738c9922ab98e7058a5f078f425160293684fd"
     },
     "LinuxParameters": {
      "Devices": [
       {
        "ContainerPath": "/dev/neuron0",
        "HostPath": "/dev/neuron0",
        "Permissions": [
         "read",
         "write"
        ]
       },
       {
        "ContainerPath": "/dev/neuron1",
        "HostPath": "/dev/neuron1",
        "Permissions": [
         "read",
         "write"
        ]
       },
       {
        "ContainerPath": "/dev/neuron2",
        "HostPath": "/dev/neuron2",
        "Permissions": [
         "read",
         "write"
        ]
       },
       {
        "ContainerPath": "/dev/neuron3",
        "HostPath": "/dev/neuron3",
        "Permissions": [
         "read",
         "write"
        ]
       },
       {
        "ContainerPath": "/dev/neuron4",
        "HostPath": "/dev/neuron4",
        "Permissions": [
         "read",
         "write"
        ]
       },
       {
        "ContainerPath": "/dev/neuron5",
        "HostPath": "/dev/neuron5",
        "Permissions": [
         "read",
         "write"
        ]
       }
      ]
     },
     "ReadonlyRootFilesystem": false,
     "ResourceRequirements": [
      {
       "Type": "MEMORY",
       "Value": "373556"
      },
      {
       "Type": "VCPU",
       "Value": "96"
      }
     ]
    },
    "PlatformCapabilities": [
     "EC2"
    ],
    "RetryStrategy": {},
    "Timeout": {},
    "Type": "container"
   }
  },
  "NeuronxCompileCompileJobProviderframeworkonEventServiceRoleF7F53533": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "NeuronxCompileCompileJobProviderframeworkonEventServiceRoleDefaultPolicyC11D7BCB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "NeuronxCompileCompileJobProviderwaiterstatemachine6B836FC7"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxCompileCompileJobProviderframeworkonEventServiceRoleDefaultPolicyC11D7BCB",
    "Roles": [
     {
      "Ref": "NeuronxCompileCompileJobProviderframeworkonEventServiceRoleF7F53533"
     }
    ]
   }
  },
  "NeuronxCompileCompileJobProviderframeworkonEventDFC28052": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3542be390685e0c8353d92ccb5796d343cd93ca946b6b0de798004206a199adc.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (Calm3CompileStack/NeuronxCompile/CompileJobProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
        "Arn"
       ]
      },
      "USER_IS_COMPLETE_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
        "Arn"
       ]
      },
      "WAITER_STATE_MACHINE_ARN": {
       "Ref": "NeuronxCompileCompileJobProviderwaiterstatemachine6B836FC7"
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "NeuronxCompileCompileJobProviderframeworkonEventServiceRoleF7F53533",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "NeuronxCompileCompileJobProviderframeworkonEventServiceRoleDefaultPolicyC11D7BCB",
    "NeuronxCompileCompileJobProviderframeworkonEventServiceRoleF7F53533"
   ]
  },
  "NeuronxCompileCompileJobProviderframeworkisCompleteServiceRole7B213791": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "NeuronxCompileCompileJobProviderframeworkisCompleteServiceRoleDefaultPolicy8FED3143": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxCompileCompileJobProviderframeworkisCompleteServiceRoleDefaultPolicy8FED3143",
    "Roles": [
     {
      "Ref": "NeuronxCompileCompileJobProviderframeworkisCompleteServiceRole7B213791"
     }
    ]
   }
  },
  "NeuronxCompileCompileJobProviderframeworkisCompleteA66E5E9A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3542be390685e0c8353d92ccb5796d343cd93ca946b6b0de798004206a199adc.zip"
    },
    "Description": "AWS CDK resource provider framework - isComplete (Calm3CompileStack/NeuronxCompile/CompileJobProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
        "Arn"
       ]
      },
      "USER_IS_COMPLETE_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.isComplete",
    "Role": {
     "Fn::GetAtt": [
      "NeuronxCompileCompileJobProviderframeworkisCompleteServiceRole7B213791",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "NeuronxCompileCompileJobProviderframeworkisCompleteServiceRoleDefaultPolicy8FED3143",
    "NeuronxCompileCompileJobProviderframeworkisCompleteServiceRole7B213791"
   ]
  },
  "NeuronxCompileCompileJobProviderframeworkonTimeoutServiceRole0EB0D950": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "NeuronxCompileCompileJobProviderframeworkonTimeoutServiceRoleDefaultPolicy58481096": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxCompileCompileJobProviderframeworkonTimeoutServiceRoleDefaultPolicy58481096",
    "Roles": [
     {
      "Ref": "NeuronxCompileCompileJobProviderframeworkonTimeoutServiceRole0EB0D950"
     }
    ]
   }
  },
  "NeuronxCompileCompileJobProviderframeworkonTimeout4D01EFE9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3542be390685e0c8353d92ccb5796d343cd93ca946b6b0de798004206a199adc.zip"
    },
    "Description": "AWS CDK resource provider framework - onTimeout (Calm3CompileStack/NeuronxCompile/CompileJobProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
        "Arn"
       ]
      },
      "USER_IS_COMPLETE_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onTimeout",
    "Role": {
     "Fn::GetAtt": [
      "NeuronxCompileCompileJobProviderframeworkonTimeoutServiceRole0EB0D950",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "NeuronxCompileCompileJobProviderframeworkonTimeoutServiceRoleDefaultPolicy58481096",
    "NeuronxCompileCompileJobProviderframeworkonTimeoutServiceRole0EB0D950"
   ]
  },
  "NeuronxCompileCompileJobProviderwaiterstatemachineRoleC71AF084": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "NeuronxCompileCompileJobProviderwaiterstatemachineRoleDefaultPolicyB4A73752": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "NeuronxCompileCompileJobProviderframeworkisCompleteA66E5E9A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "NeuronxCompileCompileJobProviderframeworkonTimeout4D01EFE9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "NeuronxCompileCompileJobProviderframeworkisCompleteA66E5E9A",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "NeuronxCompileCompileJobProviderframeworkonTimeout4D01EFE9",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogDelivery",
        "logs:CreateLogStream",
        "logs:DeleteLogDelivery",
        "logs:DescribeLogGroups",
        "logs:DescribeResourcePolicies",
        "logs:GetLogDelivery",
        "logs:ListLogDeliveries",
        "logs:PutLogEvents",
        "logs:PutResourcePolicy",
        "logs:UpdateLogDelivery"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxCompileCompileJobProviderwaiterstatemachineRoleDefaultPolicyB4A73752",
    "Roles": [
     {
      "Ref": "NeuronxCompileCompileJobProviderwaiterstatemachineRoleC71AF084"
     }
    ]
   }
  },
  "NeuronxCompileCompileJobProviderwaiterstatemachineLogGroupF14C2137": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/vendedlogs/states/waiter-state-machine-",
       {
        "Ref": "NeuronxCompileCompileJobProviderframeworkisCompleteA66E5E9A"
       },
       "-c8774825366fe83b88032c9bde2539bcaa19a63e6d"
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "NeuronxCompileCompileJobProviderwaiterstatemachine6B836FC7": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"framework-isComplete-task\",\"States\":{\"framework-isComplete-task\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":60,\"MaxAttempts\":60,\"BackoffRate\":1}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"framework-onTimeout-task\"}],\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "NeuronxCompileCompileJobProviderframeworkisCompleteA66E5E9A",
         "Arn"
        ]
       },
       "\"},\"framework-onTimeout-task\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "NeuronxCompileCompileJobProviderframeworkonTimeout4D01EFE9",
         "Arn"
        ]
       },
       "\"}}}"
      ]
     ]
    },
    "LoggingConfiguration": {
     "Destinations": [
      {
       "CloudWatchLogsLogGroup": {
        "LogGroupArn": {
         "Fn::GetAtt": [
          "NeuronxCompileCompileJobProviderwaiterstatemachineLogGroupF14C2137",
          "Arn"
         ]
        }
       }
      }
     ],
     "IncludeExecutionData": false,
     "Level": "ERROR"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "NeuronxCompileCompileJobProviderwaiterstatemachineRoleC71AF084",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "NeuronxCompileCompileJobProviderwaiterstatemachineRoleDefaultPolicyB4A73752",
    "NeuronxCompileCompileJobProviderwaiterstatemachineRoleC71AF084"
   ]
  },
  "NeuronxCompile2DF99EDF": {
   "Type": "Custom::NeuronxCompile",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "NeuronxCompileCompileJobProviderframeworkonEventDFC28052",
      "Arn"
     ]
    },
    "jobDefinitionArn": {
     "Ref": "NeuronxCompileJobDefinition5C3FF87A"
    },
    "jobQueueArn": {
     "Fn::GetAtt": [
      "NeuronxCompileJobQueueB7D6AE97",
      "JobQueueArn"
     ]
    },
    "artifactS3Prefix": "cyberagent/calm3-22b-chat/neuronx-2.19.1/tp4-np4096-opt1"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "SingletonLambda08c9850a6f134ed49e2d7888d7b5a258ServiceRole12DC7288": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "SingletonLambda08c9850a6f134ed49e2d7888d7b5a25822148CF9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c2b19c211a26f010ddd3faa2eabd397cfd16b532a8e0b8426ea98a285b6714e6.zip"
    },
    "Handler": "index.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "SingletonLambda08c9850a6f134ed49e2d7888d7b5a258ServiceRole12DC7288",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "SingletonLambda08c9850a6f134ed49e2d7888d7b5a258ServiceRole12DC7288"
   ]
  },
  "SingletonLambda1361f4695c924c469e115d1dbf925bacServiceRole90E87678": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "SingletonLambda1361f4695c924c469e115d1dbf925bacServiceRoleDefaultPolicy795C8F7D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "batch:SubmitJob",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "NeuronxCompileJobQueueB7D6AE97",
          "JobQueueArn"
         ]
        },
        {
         "Fn::GetAtt": [
          "NeuronxQuantCompileJobQueue429E0A23",
          "JobQueueArn"
         ]
        },
        {
         "Ref": "NeuronxCompileJobDefinition5C3FF87A"
        },
        {
         "Ref": "NeuronxQuantCompileJobDefinitionE9F8860B"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SingletonLambda1361f4695c924c469e115d1dbf925bacServiceRoleDefaultPolicy795C8F7D",
    "Roles": [
     {
      "Ref": "SingletonLambda1361f4695c924c469e115d1dbf925bacServiceRole90E87678"
     }
    ]
   }
  },
  "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "665dbc8cb1c1eaab90c1f9a53c630e6d7d11838e916aa8804bc8305b67208d40.zip"
    },
    "Handler": "index.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "SingletonLambda1361f4695c924c469e115d1dbf925bacServiceRole90E87678",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "SingletonLambda1361f4695c924c469e115d1dbf925bacServiceRoleDefaultPolicy795C8F7D",
    "SingletonLambda1361f4695c924c469e115d1dbf925bacServiceRole90E87678"
   ]
  },
  "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62ServiceRoleE0466451": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62ServiceRoleDefaultPolicy92D5204A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "batch:DescribeJobs",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62ServiceRoleDefaultPolicy92D5204A",
    "Roles": [
     {
      "Ref": "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62ServiceRoleE0466451"
     }
    ]
   }
  },
  "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "665dbc8cb1c1eaab90c1f9a53c630e6d7d11838e916aa8804bc8305b67208d40.zip"
    },
    "Handler": "index.isComplete",
    "Role": {
     "Fn::GetAtt": [
      "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62ServiceRoleE0466451",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62ServiceRoleDefaultPolicy92D5204A",
    "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62ServiceRoleE0466451"
   ]
  },
  "NeuronxQuantCompileLaunchTemplateA0D1180F": {
   "Type": "AWS::EC2::LaunchTemplate",
   "Properties": {
    "LaunchTemplateData": {
     "BlockDeviceMappings": [
      {
       "DeviceName": "/dev/xvda",
       "Ebs": {
        "VolumeSize": 110
       }
      }
     ],
     "TagSpecifications": [
      {
       "ResourceType": "instance",
       "Tags": [
        {
         "Key": "Name",
         "Value": "Calm3CompileStack/NeuronxQuantCompile/LaunchTemplate"
        }
       ]
      },
      {
       "ResourceType": "volume",
       "Tags": [
        {
         "Key": "Name",
         "Value": "Calm3CompileStack/NeuronxQuantCompile/LaunchTemplate"
        }
       ]
      }
     ]
    },
    "TagSpecifications": [
     {
      "ResourceType": "launch-template",
      "Tags": [
       {
        "Key": "Name",
        "Value": "Calm3CompileStack/NeuronxQuantCompile/LaunchTemplate"
       }
      ]
     }
    ]
   }
  },
  "NeuronxQuantCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRole220936D4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "NeuronxQuantCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRoleDefaultPolicyDB10D7FE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SingletonLambda08c9850a6f134ed49e2d7888d7b5a25822148CF9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambda08c9850a6f134ed49e2d7888d7b5a25822148CF9",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxQuantCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRoleDefaultPolicyDB10D7FE",
    "Roles": [
     {
      "Ref": "NeuronxQuantCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRole220936D4"
     }
    ]
   }
  },
  "NeuronxQuantCompileMachinImageNeuronxAmiProviderframeworkonEvent221B8EEA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3542be390685e0c8353d92ccb5796d343cd93ca946b6b0de798004206a199adc.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (Calm3CompileStack/NeuronxQuantCompile/MachinImage/NeuronxAmiProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambda08c9850a6f134ed49e2d7888d7b5a25822148CF9",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "NeuronxQuantCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRole220936D4",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "NeuronxQuantCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRoleDefaultPolicyDB10D7FE",
    "NeuronxQuantCompileMachinImageNeuronxAmiProviderframeworkonEventServiceRole220936D4"
   ]
  },
  "NeuronxQuantCompileMachinImageNeuronxAmiEA3AC00D": {
   "Type": "Custom::NeuronxAmi",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "NeuronxQuantCompileMachinImageNeuronxAmiProviderframeworkonEvent221B8EEA",
      "Arn"
     ]
    },
    "image": {
     "Ref": "NeuronxQuantCompileMachinImageImageParameter352D1AFA"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "NeuronxQuantCompileComputeEnvironmentSecurityGroup7711E000": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Calm3CompileStack/NeuronxQuantCompile/ComputeEnvironment/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "neuronx-compile-worker"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "NeuronxQuantCompileComputeEnvironmentInstanceProfileRoleD15CA082": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "neuronx-compile-worker"
     }
    ]
   }
  },
  "NeuronxQuantCompileComputeEnvironmentInstanceProfileRoleDefaultPolicyD047BB82": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Bucket83908E77",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "Bucket83908E77",
             "Arn"
            ]
           },
           "/cyberagent/calm3-22b-chat/neuronx-2.19.1/tp2-np1024-opt1-quants8/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxQuantCompileComputeEnvironmentInstanceProfileRoleDefaultPolicyD047BB82",
    "Roles": [
     {
      "Ref": "NeuronxQuantCompileComputeEnvironmentInstanceProfileRoleD15CA082"
     }
    ]
   }
  },
  "NeuronxQuantCompileComputeEnvironmentInstanceProfile3C318C5F": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "NeuronxQuantCompileComputeEnvironmentInstanceProfileRoleD15CA082"
     }
    ]
   }
  },
  "NeuronxQuantCompileComputeEnvironment884911E2": {
   "Type": "AWS::Batch::ComputeEnvironment",
   "Properties": {
    "ComputeResources": {
     "AllocationStrategy": "SPOT_PRICE_CAPACITY_OPTIMIZED",
     "Ec2Configuration": [
      {
       "ImageIdOverride": {
        "Fn::GetAtt": [
         "NeuronxQuantCompileMachinImageNeuronxAmiEA3AC00D",
         "image_id"
        ]
       },
       "ImageType": "ECS_AL2023"
      }
     ],
     "InstanceRole": {
      "Fn::GetAtt": [
       "NeuronxQuantCompileComputeEnvironmentInstanceProfile3C318C5F",
       "Arn"
      ]
     },
     "InstanceTypes": [
      "inf2.8xlarge"
     ],
     "LaunchTemplate": {
      "LaunchTemplateId": {
       "Ref": "NeuronxQuantCompileLaunchTemplateA0D1180F"
      },
      "Version": {
       "Fn::GetAtt": [
        "NeuronxQuantCompileLaunchTemplateA0D1180F",
        "LatestVersionNumber"
       ]
      }
     },
     "MaxvCpus": 256,
     "MinvCpus": 0,
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "NeuronxQuantCompileComputeEnvironmentSecurityGroup7711E000",
        "GroupId"
       ]
      }
     ],
     "Subnets": [
      {
       "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
      },
      {
       "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
      }
     ],
     "Tags": {
      "Name": "neuronx-compile-worker"
     },
     "Type": "SPOT"
    },
    "ReplaceComputeEnvironment": false,
    "State": "ENABLED",
    "Tags": {
     "Name": "neuronx-compile-worker"
    },
    "Type": "managed",
    "UpdatePolicy": {}
   }
  },
  "NeuronxQuantCompileJobQueue429E0A23": {
   "Type": "AWS::Batch::JobQueue",
   "Properties": {
    "ComputeEnvironmentOrder": [
     {
      "ComputeEnvironment": {
       "Fn::GetAtt": [
        "NeuronxQuantCompileComputeEnvironment884911E2",
        "ComputeEnvironmentArn"
       ]
      },
      "Order": 1
     }
    ],
    "JobStateTimeLimitActions": [
     {
      "Action": "CANCEL",
      "MaxTimeSeconds": 600,
      "Reason": "MISCONFIGURATION:JOB_RESOURCE_REQUIREMENT",
      "State": "RUNNABLE"
     }
    ],
    "Priority": 1,
    "State": "ENABLED"
   }
  },
  "NeuronxQuantCompileContainerDefinitionExecutionRole1495D1EA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "NeuronxQuantCompileContainerDefinitionExecutionRoleDefaultPolicy038CC648": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/batch/job:*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxQuantCompileContainerDefinitionExecutionRoleDefaultPolicy038CC648",
    "Roles": [
     {
      "Ref": "NeuronxQuantCompileContainerDefinitionExecutionRole1495D1EA"
     }
    ]
   }
  },
  "NeuronxQuantCompileJobDefinitionE9F8860B": {
   "Type": "AWS::Batch::JobDefinition",
   "Properties": {
    "ContainerProperties": {
     "Environment": [
      {
       "Name": "MODEL_ID",
       "Value": "cyberagent/calm3-22b-chat"
      },
      {
       "Name": "TP_DEGREE",
       "Value": "2"
      },
      {
       "Name": "N_POSITIONS",
       "Value": "1024"
      },
      {
       "Name": "OPT_LEVEL",
       "Value": "1"
      },
      {
       "Name": "QUANT_DTYPE",
       "Value": "s8"
      },
      {
       "Name": "ARTIFACT_S3_URL",
       "Value": {
        "Fn::Join": [
         "",
         [
          "s3://",
          {
           "Ref": "Bucket83908E77"
          },
          "/cyberagent/calm3-22b-chat/neuronx-2.19.1/tp2-np1024-opt1-quants8"
         ]
        ]
       }
      }
     ],
     "ExecutionRoleArn": {
      "Fn::GetAtt": [
       "NeuronxQuantCompileContainerDefinitionExecutionRole1495D1EA",
       "Arn"
      ]
     },
     "Image": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2ba1a7843b8bcffbb0c4b4cd6f738c9922ab98e7058a5f078f425160293684fd"
     },
     "LinuxParameters": {
      "Devices": [
       {
        "ContainerPath": "/dev/neuron0",
        "HostPath": "/dev/neuron0",
        "Permissions": [
         "read",
         "write"
        ]
       }
      ]
     },
     "ReadonlyRootFilesystem": false,
     "ResourceRequirements": [
      {
       "Type": "MEMORY",
       "Value": "124519"
      },
      {
       "Type": "VCPU",
       "Value": "32"
      }
     ]
    },
    "PlatformCapabilities": [
     "EC2"
    ],
    "RetryStrategy": {},
    "Timeout": {},
    "Type": "container"
   }
  },
  "NeuronxQuantCompileCompileJobProviderframeworkonEventServiceRole0BBAC5A5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "NeuronxQuantCompileCompileJobProviderframeworkonEventServiceRoleDefaultPolicyBE32DCD4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "NeuronxQuantCompileCompileJobProviderwaiterstatemachine8CCCD832"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxQuantCompileCompileJobProviderframeworkonEventServiceRoleDefaultPolicyBE32DCD4",
    "Roles": [
     {
      "Ref": "NeuronxQuantCompileCompileJobProviderframeworkonEventServiceRole0BBAC5A5"
     }
    ]
   }
  },
  "NeuronxQuantCompileCompileJobProviderframeworkonEvent5159882B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3542be390685e0c8353d92ccb5796d343cd93ca946b6b0de798004206a199adc.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (Calm3CompileStack/NeuronxQuantCompile/CompileJobProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
        "Arn"
       ]
      },
      "USER_IS_COMPLETE_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
        "Arn"
       ]
      },
      "WAITER_STATE_MACHINE_ARN": {
       "Ref": "NeuronxQuantCompileCompileJobProviderwaiterstatemachine8CCCD832"
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "NeuronxQuantCompileCompileJobProviderframeworkonEventServiceRole0BBAC5A5",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "NeuronxQuantCompileCompileJobProviderframeworkonEventServiceRoleDefaultPolicyBE32DCD4",
    "NeuronxQuantCompileCompileJobProviderframeworkonEventServiceRole0BBAC5A5"
   ]
  },
  "NeuronxQuantCompileCompileJobProviderframeworkisCompleteServiceRole01481791": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "NeuronxQuantCompileCompileJobProviderframeworkisCompleteServiceRoleDefaultPolicyF4B989B7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxQuantCompileCompileJobProviderframeworkisCompleteServiceRoleDefaultPolicyF4B989B7",
    "Roles": [
     {
      "Ref": "NeuronxQuantCompileCompileJobProviderframeworkisCompleteServiceRole01481791"
     }
    ]
   }
  },
  "NeuronxQuantCompileCompileJobProviderframeworkisCompleteB3CF2D8B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3542be390685e0c8353d92ccb5796d343cd93ca946b6b0de798004206a199adc.zip"
    },
    "Description": "AWS CDK resource provider framework - isComplete (Calm3CompileStack/NeuronxQuantCompile/CompileJobProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
        "Arn"
       ]
      },
      "USER_IS_COMPLETE_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.isComplete",
    "Role": {
     "Fn::GetAtt": [
      "NeuronxQuantCompileCompileJobProviderframeworkisCompleteServiceRole01481791",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "NeuronxQuantCompileCompileJobProviderframeworkisCompleteServiceRoleDefaultPolicyF4B989B7",
    "NeuronxQuantCompileCompileJobProviderframeworkisCompleteServiceRole01481791"
   ]
  },
  "NeuronxQuantCompileCompileJobProviderframeworkonTimeoutServiceRoleEE28D143": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "NeuronxQuantCompileCompileJobProviderframeworkonTimeoutServiceRoleDefaultPolicyE3767276": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxQuantCompileCompileJobProviderframeworkonTimeoutServiceRoleDefaultPolicyE3767276",
    "Roles": [
     {
      "Ref": "NeuronxQuantCompileCompileJobProviderframeworkonTimeoutServiceRoleEE28D143"
     }
    ]
   }
  },
  "NeuronxQuantCompileCompileJobProviderframeworkonTimeout0F728610": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3542be390685e0c8353d92ccb5796d343cd93ca946b6b0de798004206a199adc.zip"
    },
    "Description": "AWS CDK resource provider framework - onTimeout (Calm3CompileStack/NeuronxQuantCompile/CompileJobProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambda1361f4695c924c469e115d1dbf925bac39F17F23",
        "Arn"
       ]
      },
      "USER_IS_COMPLETE_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SingletonLambdadf16dba85f77480ca6adcfdf74c3de62246EFD86",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onTimeout",
    "Role": {
     "Fn::GetAtt": [
      "NeuronxQuantCompileCompileJobProviderframeworkonTimeoutServiceRoleEE28D143",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "NeuronxQuantCompileCompileJobProviderframeworkonTimeoutServiceRoleDefaultPolicyE3767276",
    "NeuronxQuantCompileCompileJobProviderframeworkonTimeoutServiceRoleEE28D143"
   ]
  },
  "NeuronxQuantCompileCompileJobProviderwaiterstatemachineRoleF30F4F1E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "NeuronxQuantCompileCompileJobProviderwaiterstatemachineRoleDefaultPolicy8B287DF7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "NeuronxQuantCompileCompileJobProviderframeworkisCompleteB3CF2D8B",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "NeuronxQuantCompileCompileJobProviderframeworkonTimeout0F728610",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "NeuronxQuantCompileCompileJobProviderframeworkisCompleteB3CF2D8B",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "NeuronxQuantCompileCompileJobProviderframeworkonTimeout0F728610",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogDelivery",
        "logs:CreateLogStream",
        "logs:DeleteLogDelivery",
        "logs:DescribeLogGroups",
        "logs:DescribeResourcePolicies",
        "logs:GetLogDelivery",
        "logs:ListLogDeliveries",
        "logs:PutLogEvents",
        "logs:PutResourcePolicy",
        "logs:UpdateLogDelivery"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "NeuronxQuantCompileCompileJobProviderwaiterstatemachineRoleDefaultPolicy8B287DF7",
    "Roles": [
     {
      "Ref": "NeuronxQuantCompileCompileJobProviderwaiterstatemachineRoleF30F4F1E"
     }
    ]
   }
  },
  "NeuronxQuantCompileCompileJobProviderwaiterstatemachineLogGroup11323B51": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/vendedlogs/states/waiter-state-machine-",
       {
        "Ref": "NeuronxQuantCompileCompileJobProviderframeworkisCompleteB3CF2D8B"
       },
       "-c8c1c39a9aa0640b1b1d501141a988c2f3a316244b"
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "NeuronxQuantCompileCompileJobProviderwaiterstatemachine8CCCD832": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"framework-isComplete-task\",\"States\":{\"framework-isComplete-task\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":60,\"MaxAttempts\":60,\"BackoffRate\":1}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"framework-onTimeout-task\"}],\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "NeuronxQuantCompileCompileJobProviderframeworkisCompleteB3CF2D8B",
         "Arn"
        ]
       },
       "\"},\"framework-onTimeout-task\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "NeuronxQuantCompileCompileJobProviderframeworkonTimeout0F728610",
         "Arn"
        ]
       },
       "\"}}}"
      ]
     ]
    },
    "LoggingConfiguration": {
     "Destinations": [
      {
       "CloudWatchLogsLogGroup": {
        "LogGroupArn": {
         "Fn::GetAtt": [
          "NeuronxQuantCompileCompileJobProviderwaiterstatemachineLogGroup11323B51",
          "Arn"
         ]
        }
       }
      }
     ],
     "IncludeExecutionData": false,
     "Level": "ERROR"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "NeuronxQuantCompileCompileJobProviderwaiterstatemachineRoleF30F4F1E",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "NeuronxQuantCompileCompileJobProviderwaiterstatemachineRoleDefaultPolicy8B287DF7",
    "NeuronxQuantCompileCompileJobProviderwaiterstatemachineRoleF30F4F1E"
   ]
  },
  "NeuronxQuantCompile0B27A228": {
   "Type": "Custom::NeuronxCompile",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "NeuronxQuantCompileCompileJobProviderframeworkonEvent5159882B",
      "Arn"
     ]
    },
    "jobDefinitionArn": {
     "Ref": "NeuronxQuantCompileJobDefinitionE9F8860B"
    },
    "jobQueueArn": {
     "Fn::GetAtt": [
      "NeuronxQuantCompileJobQueue429E0A23",
      "JobQueueArn"
     ]
    },
    "artifactS3Prefix": "cyberagent/calm3-22b-chat/neuronx-2.19.1/tp2-np1024-opt1-quants8"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-isoe-west-1": {
    "value": "nodejs18.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-gov-east-1": {
    "value": "nodejs18.x"
   },
   "us-gov-west-1": {
    "value": "nodejs18.x"
   },
   "us-iso-east-1": {
    "value": "nodejs18.x"
   },
   "us-iso-west-1": {
    "value": "nodejs18.x"
   },
   "us-isob-east-1": {
    "value": "nodejs18.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Parameters": {
  "NeuronxCompileMachinImageImageParameter4D5CDC05": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/aws/service/ecs/optimized-ami/amazon-linux-2023/neuron/recommended"
  },
  "NeuronxQuantCompileMachinImageImageParameter352D1AFA": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/aws/service/ecs/optimized-ami/amazon-linux-2023/neuron/recommended"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "CompiledArtifact": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "s3://",
      {
       "Ref": "Bucket83908E77"
      },
      "/",
      {
       "Fn::GetAtt": [
        "NeuronxCompile2DF99EDF",
        "ArtifactS3Prefix"
       ]
      }
     ]
    ]
   }
  },
  "QuantCompiledArtifact": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "s3://",
      {
       "Ref": "Bucket83908E77"
      },
      "/",
      {
       "Fn::GetAtt": [
        "NeuronxQuantCompile0B27A228",
        "ArtifactS3Prefix"
       ]
      }
     ]
    ]
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}